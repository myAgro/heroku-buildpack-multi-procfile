#!/usr/bin/env bash

indent() {
    sed -u 's/^/       /'
}

BUILD_DIR=$1
CACHE_DIR=$2
ENV_DIR=$3

PROCFILE=$(cat "${ENV_DIR}/PROCFILE")

if [[ -z "${PROCFILE}" ]]; then
    echo "PROCFILE was not set. Aborting" | indent
    exit 1
fi

cp "${BUILD_DIR}/${PROCFILE}" "${BUILD_DIR}/Procfile"

if ! [ $? ]; then
    echo "FAILED to copy a Procfile" | indent
    exit 1
fi

echo "Copied ${PROCFILE} as Procfile successfully" | indent

APP_DIR=$(dirname "${BUILD_DIR}/${PROCFILE}")

if [[ -f "${APP_DIR}/requirements.txt" ]]; then
    cp "${APP_DIR}/requirements.txt" "${BUILD_DIR}/requirements.txt"
    echo "Copied ${APP_DIR}/requirements.txt as requirements.txt successfully" | indent
fi

if [[ -f "${APP_DIR}/runtime.txt" ]]; then
    cp "${APP_DIR}/runtime.txt" "${BUILD_DIR}/runtime.txt"
    echo "Copied ${APP_DIR}/runtime.txt as runtime.txt successfully" | indent
fi

if [[ -f "${APP_DIR}/Pipfile" ]]; then
    cp "${APP_DIR}/Pipfile" "${BUILD_DIR}/Pipfile"
    echo "Copied ${APP_DIR}/Pipfile as Pipfile successfully" | indent
fi

if [[ -f "${APP_DIR}/Pipfile.lock" ]]; then
    cp "${APP_DIR}/Pipfile.lock" "${BUILD_DIR}/Pipfile.lock"
    echo "Copied ${APP_DIR}/Pipfile.lock as Pipfile.lock successfully" | indent
fi
